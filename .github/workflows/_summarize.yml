name: Summarize

permissions: {}

on:
  workflow_call:
    inputs:
      date:
        required: true
        type: string
      repository:
        required: true
        type: string
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true

jobs:
  summarize:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      models: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: koki-develop/summarize-repository-activities@cf77348ac5f79e20718328fb42af303077c5f361 # v0.0.11
        id: summarize
        with:
          locale: ja
          github-token: ${{ github.token }}
          days-ago: 1
          ai-model: openai/gpt-4o-mini
          ai-api-key: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: ${{ inputs.repository }}
          releases-limit: 20
          pull-requests-limit: 20
          issues-limit: 20

      - id: has-changes
        env:
          HAS_CHANGES: ${{ steps.summarize.outputs.has-new-release == 'true' || steps.summarize.outputs.has-new-pull-request == 'true' || steps.summarize.outputs.has-new-issue == 'true' }}
        run: echo "value=${HAS_CHANGES}" >> $GITHUB_OUTPUT

      - name: Save summary
        if: ${{ steps.has-changes.outputs.value == 'true' }}
        env:
          REPOSITORY: ${{ inputs.repository }}
          SUMMARY: ${{ steps.summarize.outputs.summary }}
          DATE: ${{ inputs.date }}
        run: |
          mkdir -p "${REPOSITORY}"
          {
            echo "# [${REPOSITORY}](https://github.com/${REPOSITORY})"
            echo ""
            echo "${SUMMARY}"
          } > "${REPOSITORY}/${DATE}.md"

      - name: Configure git
        if: ${{ steps.has-changes.outputs.value == 'true' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Commit summary
        if: ${{ steps.has-changes.outputs.value == 'true' }}
        env:
          REPOSITORY: ${{ inputs.repository }}
          DATE: ${{ inputs.date }}
        run: |
          git add "${REPOSITORY}/${DATE}.md"
          git commit -m "Update summary for ${REPOSITORY} on ${DATE}"

      - name: Push changes
        if: ${{ steps.has-changes.outputs.value == 'true' }}
        run: |
          git fetch origin main
          git rebase origin/main
          git push origin main
